 DROP TABLE IF EXISTS comments;
 DROP TABLE IF EXISTS bookings;
 DROP TABLE IF EXISTS items;
 DROP TABLE IF EXISTS requests;
 DROP TABLE IF EXISTS users;

    CREATE TABLE if not exists users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(255) NOT NULL,
    email varchar(255) NOT NULL UNIQUE,
    CONSTRAINT pk_user PRIMARY KEY (id)
);

  CREATE TABLE if not exists requests (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        description TEXT NOT NULL,
        requestor_id BIGINT NOT NULL,
        CONSTRAINT pk_request PRIMARY KEY (id),
        created TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        CONSTRAINT fk_requests_users FOREIGN KEY (requestor_id) REFERENCES users(id)
    );

    CREATE TABLE if not exists items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id int not null,
    name varchar(255) NOT NULL,
    description varchar(255) NOT NULL,
    available BOOLEAN DEFAULT FALSE,
    request_id BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT fk_items_users FOREIGN KEY (owner_id) REFERENCES users(id),
    CONSTRAINT fk_items_requests FOREIGN KEY (request_id) REFERENCES requests(id)
);

  CREATE TABLE if not exists bookings (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        item_id BIGINT NOT NULL,
        booker_id BIGINT NOT NULL,
        status varchar(20) CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELLED')),
        CONSTRAINT pk_booking PRIMARY KEY (id),
        CONSTRAINT fk_bookings_items FOREIGN KEY (item_id) REFERENCES items(id),
        CONSTRAINT fk_bookings_users FOREIGN KEY (booker_id) REFERENCES users(id),
        CONSTRAINT check_dates CHECK (start_date < end_date)
    );

  CREATE TABLE if not exists comments (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        created TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        item_id BIGINT NOT NULL,
        author_id BIGINT NOT NULL,
        text varchar(255) NOT NULL,
        CONSTRAINT pk_comment PRIMARY KEY (id),
        CONSTRAINT fk_bookings_items FOREIGN KEY (item_id) REFERENCES items(id),
        CONSTRAINT fk_bookings_users FOREIGN KEY (author_id) REFERENCES users(id)
    );
